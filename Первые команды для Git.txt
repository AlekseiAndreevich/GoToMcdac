1. git config --global user.name "AlekseiAndreevich" - задать имя
2. git config --global user.email "alekseishag03@gmail.com" - задать почту
3. cd (выбрать путь куда нужно переместится)
4. git init - превращяет текющую папку в репозиторий
(доп)git remote add https://github.com/AlekseiAndreevich/GoToMcdac.git - привезать лакальный репозиторий к GitHub

ШАГ №2
подключение второго пользователя
git clone https://github.com/AlekseiAndreevich/GoToMcdac - Второй человек копирует репозиторий по сылке на смвой ПК. Связыватся с удолёным репозиторием не нужно, это уже произошло после копирования
git pull oregin (ветка)- копирует новую версию и все комиты с GitHab также нужно укозать ветку которая будет скопирована

Другие команды
git status - позволяет увидеть кокие файлы били или не были сохранены
git branch - позволяет увидеть все локальные ветки ветки. * обозначается текущяя ветка
git add (название файла) - выберает для будущего сохронения указоные файлы
git add . - выберает для будущего сохронения все файлы в тикущей папке 
git commit -m "(Название комита)" - сохроняет то что ты наподготавливал и в " " можно укозать название комита. по сути эта шняга создоёт локальный комит
get log - даёт инфу о всех комитах в хронологическом порядке и даёт их хеши (типа название)
git checkout (хешь комита) - возвращяет к указонному комиту (версии)
git push (имя удалённого репозитория вернее сылка на него) - закидывает все комиты в GitHub. можно прсто укозать origin
git clone (сылка на репозиторий) - копирует данные с удалённого (или нет) репозитория

Ветки
git branch - позволяет увидеть все локальные ветки ветки. * обозначается текущяя ветка
git branch (Имя ветки) - создоёт новую ветку. перед созданием нужно убедится, что был сделан комит текущей ветки, потому сто новая ветка создоётся на основе комита тикущей
git checkout (Имя ветки) - позволяет перемещатсямежду веткой. перед выходом из ветки её нужно обезательно сохронять
git push origin (имя ветки) - Публикует текущую ветку. в ( ) можно укозать имя под которым ветка будет опубликована
git merge (Ветку готовую для слияния) - делает слияние двух веток веткой на котороё ты и веткой указоной в команде
git rebase (Ветку готовую для слияния) - слеяет две ветки по тому же принципу + сохроняются комиты ветки в скобках